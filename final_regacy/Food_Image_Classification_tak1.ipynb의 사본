{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"RWpfrFsCGDS1"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","import tensorflow as tf\n","from tensorflow.keras.models import Sequential, load_model, Model\n","from tensorflow.keras.layers import Dense, Flatten, Input, concatenate\n","from tensorflow.keras.layers import Conv2D, MaxPool2D, Dropout\n","from tensorflow.keras.layers import GlobalAveragePooling2D\n","from tensorflow.keras.optimizers import SGD, Adam, RMSprop\n","import tensorflow.keras.utils as utils\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler, MinMaxScaler, LabelEncoder\n","from sklearn.metrics import accuracy_score\n","\n","from datetime import datetime\n","import cv2\n","import zipfile\n","import shutil\n","import os\n","import glob\n","\n","from tensorflow.keras.applications import Xception, ResNet50, InceptionV3, MobileNet\n","from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","from keras.callbacks import EarlyStopping"]},{"cell_type":"code","source":["# import matplotlib.font_manager as fm\n","# font_name = fm.FontProperties(fname=\"C:\\\\Windows\\\\Fonts\\\\malgun.ttf\").get_name()\n","# plt.rc(\"font\", family=font_name)\n","\n","# import matplotlib as mlp\n","# mlp.rcParams[\"axes.unicode_minus\"] = False"],"metadata":{"id":"J_9jCL1JpdXl"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qwvCWQITKlcO","executionInfo":{"status":"ok","timestamp":1687766979129,"user_tz":-540,"elapsed":5435,"user":{"displayName":"ht k","userId":"13819470964221797465"}},"outputId":"0aedf83e-cd2d-4df2-cf85-eed9a7ae66e7"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: opencv-python in /usr/local/lib/python3.10/dist-packages (4.7.0.72)\n","Requirement already satisfied: numpy>=1.21.2 in /usr/local/lib/python3.10/dist-packages (from opencv-python) (1.22.4)\n"]}],"source":["!pip install opencv-python"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4ZBtD9-0KlcP"},"outputs":[],"source":["### 경로 설정\n","\n","# colab\n","ROOT_DIR='/content'\n","# loocal\n","#ROOT_DIR='content'\n","DATA_ROOT_DIR=os.path.join(ROOT_DIR, 'data2')\n","TRAIN_DATA_ROOT_DIR= os.path.join(ROOT_DIR, 'Training')\n","TEST_DATA_ROOT_DIR= os.path.join(ROOT_DIR, 'Testing')\n","\n","#if not os.path.exists(DATA_ROOT_DIR):\n","#    os.mkdir(DATA_ROOT_DIR)\n","if not os.path.exists(TRAIN_DATA_ROOT_DIR):\n","    os.mkdir(TRAIN_DATA_ROOT_DIR)\n","if not os.path.exists(TEST_DATA_ROOT_DIR):\n","    os.mkdir(TEST_DATA_ROOT_DIR)"]},{"cell_type":"code","source":["import os\n","\n","current_directory = os.getcwd()\n","print(current_directory)"],"metadata":{"id":"w7gScH9Hixz7","executionInfo":{"status":"ok","timestamp":1687763479230,"user_tz":-540,"elapsed":2,"user":{"displayName":"ht k","userId":"13819470964221797465"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"c10173a4-fc54-4021-c947-8ed636fa083a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["/content\n"]}]},{"cell_type":"code","source":["from google.colab import drive\n","\n","drive.mount('/content/drive')\n","\n","shutil.copy(os.path.join('/content/drive/MyDrive/', 'file_image_check2.zip'), ROOT_DIR)\n","\n","if os.path.exists(DATA_ROOT_DIR):\n","    shutil.rmtree(DATA_ROOT_DIR)\n","\n","IMG_WIDTH= 224 # Colab에선 224\n","IMG_HEIGHT= 224"],"metadata":{"id":"Mw_IPYtuKlcP","executionInfo":{"status":"ok","timestamp":1687767008926,"user_tz":-540,"elapsed":20425,"user":{"displayName":"ht k","userId":"13819470964221797465"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"52a897cc-44b7-4328-a231-5066fc48dd60"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["# import zipfile\n","\n","# def guess_encoding(filename):\n","#     try:\n","#         with zipfile.ZipFile(filename) as zf:\n","#             for info in zf.infolist():\n","#                 if isinstance(info.filename, bytes):\n","#                     encoding = 'unknown'\n","#                     try_encodings = ['utf-8', 'cp437']  # Add more encodings to try if necessary\n","\n","#                     for enc in try_encodings:\n","#                         try:\n","#                             decoded = info.filename.decode(enc)\n","#                             encoding = enc\n","#                             break\n","#                         except UnicodeDecodeError:\n","#                             pass\n","\n","#                     return encoding\n","\n","#     except zipfile.BadZipFile:\n","#         return 'not a valid ZIP file'\n","\n","# # Usage\n","# zip_filename = '/content/file_image_check_tak.zip'\n","# encoding = guess_encoding(zip_filename)\n","# print(f\"The encoding of the ZIP file is: {encoding}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WWtPAy_rQ9SR","executionInfo":{"status":"ok","timestamp":1687758026301,"user_tz":-540,"elapsed":3,"user":{"displayName":"ht k","userId":"13819470964221797465"}},"outputId":"7358ad18-b913-4c6e-cec2-5c5ec692e810"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The encoding of the ZIP file is: None\n"]}]},{"cell_type":"code","source":["|# import zipfile\n","\n","# !mkdir data2\n","# %cd /content/data2\n","\n","# input_file = '../menu_100.zip'\n","# zip_encoding = 'cp949'  # ZIP 파일의 인코딩 방식에 따라 변경 가능\n","\n","# with zipfile.ZipFile(input_file, 'r') as z:\n","#     for file_info in z.infolist():\n","#         file_info.filename = file_info.filename.encode('cp437').decode(zip_encoding)\n","#         z.extract(file_info, '.', pwd=None)\n","\n","# print(\"압축 해제가 완료되었습니다.\")\n","\n","\n","# %cd /content"],"metadata":{"id":"vFP_frcxPHy3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import zipfile\n","import os\n","\n","# Specify the encoding as 'cp949' for Korean characters\n","encoding = 'cp949'\n","\n","with zipfile.ZipFile(os.path.join(ROOT_DIR, \"file_image_check2.zip\"), \"r\") as target_file:\n","    # Extract the files while specifying the encoding\n","    for file in target_file.namelist():\n","        # Decode the file name using the specified encoding\n","        decoded_name = file.encode('cp437').decode(encoding)\n","        # Construct the target file path with the decoded name\n","        target_path = os.path.join(DATA_ROOT_DIR, decoded_name)\n","        # Extract the file to the target path\n","        target_file.extract(file, target_path)"],"metadata":{"id":"zcCnIWuiOW9Q"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Specify the directory path to remove\n","directory_path = \"/content/data2/file_image_check_tak/file_image_check_tak\"\n","\n","# Use shutil.rmtree() to remove the directory and its contents\n","shutil.rmtree(directory_path)"],"metadata":{"id":"M1nok7XliMTV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Bd5xDCv-fb8W"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["label_name_list= os.listdir(\"/content/data2/file_image_check_tak\")\n","train_label_name_list= os.listdir(TRAIN_DATA_ROOT_DIR)\n","print(label_name_list)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rj61N-wuPBh7","executionInfo":{"status":"ok","timestamp":1687767057302,"user_tz":-540,"elapsed":403,"user":{"displayName":"ht k","userId":"13819470964221797465"}},"outputId":"56d020ae-3ce9-46f5-eb39-1511dba60449"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['.ipynb_checkpoints', '닭발구이', '부대찌개', '토마토스파게티', '삼겹살구이', '갈비구이', '메밀소바', '닭볶음탕', '스테이크', '불고기']\n"]}]},{"cell_type":"code","source":["import os\n","import shutil\n","\n","source_dir = '/content/data2/file_image_check_tak'\n","target_dir = '/content/data2'\n","\n","# Get a list of directories in the source directory\n","directories = next(os.walk(source_dir))[1]\n","\n","# Move each directory to the target directory\n","for directory in directories:\n","    source_path = os.path.join(source_dir, directory)\n","    target_path = os.path.join(target_dir, directory)\n","    shutil.move(source_path, target_path)\n","\n","directory_to_remove = '/content/data2/file_image_check_tak'\n","\n","# Remove the directory and its contents\n","shutil.rmtree(directory_to_remove)"],"metadata":{"id":"CrwiG-JTRC41"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"_ZSKjwMHKlcQ"},"outputs":[],"source":["import os\n","import shutil\n","\n","source_dir = '/content/data2'\n","target_dir = '/content/Training'\n","\n","# Get a list of directories in the source directory\n","directories = next(os.walk(source_dir))[1]\n","\n","# Move each directory to the target directory\n","for directory in directories:\n","    source_path = os.path.join(source_dir, directory)\n","    target_path = os.path.join(target_dir, directory)\n","    shutil.move(source_path, target_path)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zDqmorTpKlcQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1687767070946,"user_tz":-540,"elapsed":373,"user":{"displayName":"ht k","userId":"13819470964221797465"}},"outputId":"4b56cac7-2644-4737-8f65-a017613e6ed5"},"outputs":[{"output_type":"stream","name":"stdout","text":["['.ipynb_checkpoints', '닭발구이', '부대찌개', '토마토스파게티', '삼겹살구이', '갈비구이', '메밀소바', '닭볶음탕', '스테이크', '불고기']\n","train label : .ipynb_checkpoints  =>  0\n","train label : 닭발구이  =>  85\n","train label : 부대찌개  =>  219\n","train label : 토마토스파게티  =>  200\n","train label : 삼겹살구이  =>  139\n","train label : 갈비구이  =>  299\n","train label : 메밀소바  =>  109\n","train label : 닭볶음탕  =>  446\n","train label : 스테이크  =>  276\n","train label : 불고기  =>  355\n"]}],"source":["##### 훈련 데이터\n","train_label_name_list = os.listdir(TRAIN_DATA_ROOT_DIR)\n","print(train_label_name_list)\n","\n","for label_name in train_label_name_list:\n","    print(\"train label :\", label_name, \" => \", len(os.listdir(os.path.join(TRAIN_DATA_ROOT_DIR, label_name))))"]},{"cell_type":"code","source":["# ## 32장의 이미지 확인\n","# # - ImageDataGenerator를 통해 전달된 이미지 출력\n","\n","# data, label= train_generator.next()\n","# print(data.shape, label.shape)\n","# print(label)\n","\n","# plt.figure(figsize=(12,12))\n","\n","# class_dict={0:'glioma_tumor', 1:'meningioma_tumor',  2:'no_tumor',3: 'pituitary_tumor'}\n","\n","# for i in range(len(label)):\n","#     plt.subplot(4,8,i+1)\n","#     plt.axis('off')\n","#     plt.title(class_dict[label[i]])\n","#     plt.imshow(data[i])\n","\n","# plt.tight_layout()"],"metadata":{"id":"KHVIbM4FaDLC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_label_name_list= os.listdir(\"/content/Training\")\n","#train_label_name_list= os.listdir(TRAIN_DATA_ROOT_DIR)\n","print(train_label_name_list)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MT1SHc_qTSg7","executionInfo":{"status":"ok","timestamp":1687767107519,"user_tz":-540,"elapsed":552,"user":{"displayName":"ht k","userId":"13819470964221797465"}},"outputId":"83ed52c0-7db2-4252-ea28-afcac62cec6b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['.ipynb_checkpoints', '닭발구이', '부대찌개', '토마토스파게티', '삼겹살구이', '갈비구이', '메밀소바', '닭볶음탕', '스테이크', '불고기']\n"]}]},{"cell_type":"code","source":["##### move 할 파일의 비율\n","MOVE_RATIO = 0.2"],"metadata":{"id":"EFa326X6T0_V"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["label_name_list = os.listdir(TRAIN_DATA_ROOT_DIR)\n","\n","for label_name in label_name_list:\n","    src = os.path.join(TRAIN_DATA_ROOT_DIR, label_name)\n","    dst = os.path.join(TEST_DATA_ROOT_DIR, label_name)\n","\n","    train_data_file_list = os.listdir(src)\n","\n","    print(\"============================================\")\n","    print(\"total [%s] data file nums => [%s]\"%(label_name, len(train_data_file_list)))\n","\n","    np.random.shuffle(train_data_file_list)\n","    print(\"train data shuffle is done!\")\n","\n","    split_num = int(MOVE_RATIO * len(train_data_file_list))\n","    print(\"split num => \", split_num)\n","\n","    test_data_file_list = train_data_file_list[0:split_num]\n","\n","    move_num = 0\n","    for test_data_file in test_data_file_list:\n","        shutil.move(os.path.join(src, test_data_file),\n","                   os.path.join(dst, test_data_file))\n","        move_num = move_num + 1\n","\n","    print(\"total move num => \", move_num)\n","    print(\"=============================================\")"],"metadata":{"id":"p0KoRCCdSAhV","executionInfo":{"status":"ok","timestamp":1687767112221,"user_tz":-540,"elapsed":1,"user":{"displayName":"ht k","userId":"13819470964221797465"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"cd1364b6-9ad8-4128-c68e-d663df217c3c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["============================================\n","total [.ipynb_checkpoints] data file nums => [0]\n","train data shuffle is done!\n","split num =>  0\n","total move num =>  0\n","=============================================\n","============================================\n","total [닭발구이] data file nums => [85]\n","train data shuffle is done!\n","split num =>  17\n","total move num =>  17\n","=============================================\n","============================================\n","total [부대찌개] data file nums => [219]\n","train data shuffle is done!\n","split num =>  43\n","total move num =>  43\n","=============================================\n","============================================\n","total [토마토스파게티] data file nums => [200]\n","train data shuffle is done!\n","split num =>  40\n","total move num =>  40\n","=============================================\n","============================================\n","total [삼겹살구이] data file nums => [139]\n","train data shuffle is done!\n","split num =>  27\n","total move num =>  27\n","=============================================\n","============================================\n","total [갈비구이] data file nums => [299]\n","train data shuffle is done!\n","split num =>  59\n","total move num =>  59\n","=============================================\n","============================================\n","total [메밀소바] data file nums => [109]\n","train data shuffle is done!\n","split num =>  21\n","total move num =>  21\n","=============================================\n","============================================\n","total [닭볶음탕] data file nums => [446]\n","train data shuffle is done!\n","split num =>  89\n","total move num =>  89\n","=============================================\n","============================================\n","total [스테이크] data file nums => [276]\n","train data shuffle is done!\n","split num =>  55\n","total move num =>  55\n","=============================================\n","============================================\n","total [불고기] data file nums => [355]\n","train data shuffle is done!\n","split num =>  71\n","total move num =>  71\n","=============================================\n"]}]},{"cell_type":"code","source":["##### 훈련 데이터\n","train_label_name_list = os.listdir(TRAIN_DATA_ROOT_DIR)\n","print(train_label_name_list)\n","\n","for label_name in train_label_name_list:\n","    print(\"test label :\", label_name, \" => \", len(os.listdir(os.path.join(TRAIN_DATA_ROOT_DIR, label_name))))\n","\n","##### 테스트 데이터 갯수\n","test_label_name_list = os.listdir(TEST_DATA_ROOT_DIR)\n","print(test_label_name_list)\n","\n","for label_name in test_label_name_list:\n","    print(\"test label :\", label_name, \" => \", len(os.listdir(os.path.join(TEST_DATA_ROOT_DIR, label_name))))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VDjxVuIanykT","executionInfo":{"status":"ok","timestamp":1687767117144,"user_tz":-540,"elapsed":2,"user":{"displayName":"ht k","userId":"13819470964221797465"}},"outputId":"7ab5339c-6894-42cc-caf5-6579c43b33f1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['.ipynb_checkpoints', '닭발구이', '부대찌개', '토마토스파게티', '삼겹살구이', '갈비구이', '메밀소바', '닭볶음탕', '스테이크', '불고기']\n","test label : .ipynb_checkpoints  =>  0\n","test label : 닭발구이  =>  68\n","test label : 부대찌개  =>  176\n","test label : 토마토스파게티  =>  160\n","test label : 삼겹살구이  =>  112\n","test label : 갈비구이  =>  240\n","test label : 메밀소바  =>  88\n","test label : 닭볶음탕  =>  357\n","test label : 스테이크  =>  221\n","test label : 불고기  =>  284\n","['닭발구이', '부대찌개', '토마토스파게티', '삼겹살구이', '갈비구이', '메밀소바', '닭볶음탕', '스테이크', '불고기']\n","test label : 닭발구이  =>  17\n","test label : 부대찌개  =>  43\n","test label : 토마토스파게티  =>  40\n","test label : 삼겹살구이  =>  27\n","test label : 갈비구이  =>  59\n","test label : 메밀소바  =>  21\n","test label : 닭볶음탕  =>  89\n","test label : 스테이크  =>  55\n","test label : 불고기  =>  71\n"]}]},{"cell_type":"code","source":["## Image Shape 설정\n","\n","IMG_WIDTH = 224 # colab에서 224로 설정\n","IMG_HEIGHT = 224\n","\n","## ImageDataGenerator를 이용하여 데이터 불러오기\n","\n","train_datagen = ImageDataGenerator(rescale=1./255, validation_split=0.2)\n","validation_datagen = ImageDataGenerator(rescale=1./255, validation_split=0.2)\n","\n","test_datagen = ImageDataGenerator(rescale=1./255)\n","test_simple_datagen = ImageDataGenerator(rescale=1./255)\n","\n","# val 폴더가 따로 있지만 TRAIN에서 validation_split을 이용해서 사용해보겠다\n","train_generator = train_datagen.flow_from_directory(directory=TRAIN_DATA_ROOT_DIR, batch_size=32, color_mode='rgb'\n","                        ,target_size=(IMG_WIDTH, IMG_HEIGHT),\n","                       class_mode = \"sparse\", subset=\"training\")\n","\n","val_generator = validation_datagen.flow_from_directory(directory=TRAIN_DATA_ROOT_DIR, batch_size=32, color_mode='rgb'\n","                        ,target_size=(IMG_WIDTH, IMG_HEIGHT),\n","                       class_mode = \"sparse\", subset=\"validation\")\n","\n","test_generator = test_datagen.flow_from_directory(directory=TEST_DATA_ROOT_DIR, batch_size=32, color_mode='rgb'\n","                        ,target_size=(IMG_WIDTH, IMG_HEIGHT),\n","                       class_mode = \"sparse\")\n","\n","\n","print(train_generator.class_indices)\n","print(train_generator.num_classes)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-qiL6gh2n6B7","executionInfo":{"status":"ok","timestamp":1687767379270,"user_tz":-540,"elapsed":898,"user":{"displayName":"ht k","userId":"13819470964221797465"}},"outputId":"b617eeb2-8019-4640-d3a9-f1b5c1f1467b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 1699 images belonging to 10 classes.\n","Found 420 images belonging to 9 classes.\n","{'.ipynb_checkpoints': 0, '갈비구이': 1, '닭발구이': 2, '닭볶음탕': 3, '메밀소바': 4, '부대찌개': 5, '불고기': 6, '삼겹살구이': 7, '스테이크': 8, '토마토스파게티': 9}\n","10\n"]}]},{"cell_type":"code","source":["\n","# ## 32장의 이미지 확인\n","\n","# ## ImageDataGenerator를 통해 전달된 이미지 출력\n","\n","\n","\n","# data, label = train_generator.next()\n","\n","# print(data.shape, label.shape)\n","# print(label)\n","\n","# plt.figure(figsize=(12, 12))\n","# class_dict = {0:'닭발구이', 1:'부대찌개', 2:'토마토스파게티', 3:'삼겹살구이', 4:'갈비구이', 5:'메밀소바', 6:'닭볶음탕', 7:'스테이크', 8:'불고기'}\n","\n","\n","# for i in range(len(label)):\n","#     plt.subplot(8, 8, i+1)\n","#     plt.axis(\"off\")\n","#     plt.title(class_dict[label[i]])\n","#     plt.imshow(data[i])\n","\n","# plt.tight_layout()"],"metadata":{"id":"k-cKibbNxkZv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["### ImageDataGenerator 를 이용하여 데이터 불러오기\n","\n","train_data_gen= ImageDataGenerator(rescale= 1./255, validation_split=0.2)\n","# test_data_gen= ImageDataGenerator(rescale= 1./255)\n","\n","train_generator= train_data_gen.flow_from_directory(directory=TRAIN_DATA_ROOT_DIR,\n","                                                batch_size=32,\n","                                                color_mode='rgb',\n","                                                shuffle= True,\n","                                                target_size=(IMG_HEIGHT, IMG_WIDTH),\n","                                                class_mode='sparse',\n","                                                subset='training')\n","\n","val_generator= train_data_gen.flow_from_directory(directory=TRAIN_DATA_ROOT_DIR,\n","                                                batch_size=32,\n","                                                color_mode='rgb',\n","                                                shuffle= True,\n","                                                target_size=(IMG_HEIGHT, IMG_WIDTH),\n","                                                class_mode='sparse',\n","                                                subset='validation')\n","\n","# test_generator= test_data_gen.flow_from_directory(directory=TEST_DATA_ROOT_DIR,\n","#                                               batch_size=32,\n","#                                               color_mode='rgb',\n","#                                               shuffle= True,\n","#                                               target_size=(IMG_HEIGHT, IMG_WIDTH),\n","#                                               class_mode='sparse')\n","\n","print(train_generator.class_indices)\n","# print(test_generator.num_classes)\n","\n","\n","pre_trained_model= MobileNet(weights='imagenet', include_top=False,\n","                            input_shape= (IMG_WIDTH, IMG_HEIGHT, 3))\n","\n","\n","model= Sequential()\n","\n","model.add(pre_trained_model)\n","\n","model.add(GlobalAveragePooling2D())\n","\n","model.add(Dense(4096, activation='relu'))\n","model.add(Dropout(0.5))\n","model.add(Dense(4096, activation='relu'))\n","model.add(Dropout(0.5))\n","model.add(Dense(4096, activation='relu'))\n","model.add(Dropout(0.5))\n","\n","model.add(Dense(72, activation='softmax'))\n","\n","model.summary()\n","\n","model.compile(loss='sparse_categorical_crossentropy', optimizer=Adam(1e-5), metrics=['acc']) # colab: lr=2e-5\n","\n","start_time= datetime.now()\n","\n","result= model.fit(train_generator, epochs=30, validation_data=val_generator) # colab: epoch=30\n","end_time= datetime.now()\n","print('걸린시간: ', end_time - start_time)\n","\n","#### 그래프\n","plt.figure(figsize=(8,4))\n","plt.subplot(1,2,1)\n","\n","plt.title('LOSS')\n","plt.xlabel('epochs')\n","plt.ylabel('loss')\n","plt.grid()\n","\n","plt.plot(result.history['loss'], label='train_loss')\n","plt.plot(result.history['val_loss'], label= 'validation_loss')\n","plt.legend(loc='best')\n","\n","plt.subplot(1,2,2)\n","\n","plt.title('ACCURACY')\n","plt.xlabel('epochs')\n","plt.ylabel('acc')\n","plt.grid()\n","\n","plt.plot(result.history['acc'], label='train_accuracy')\n","plt.plot(result.history['val_acc'], label= 'validationi_accuracy')\n","plt.legend(loc='best')\n","\n","model.evaluate(val_generator)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"SvhR3SZKowgq","executionInfo":{"status":"ok","timestamp":1687768851466,"user_tz":-540,"elapsed":216199,"user":{"displayName":"ht k","userId":"13819470964221797465"}},"outputId":"fc7268da-a791-40d5-ce59-a994e8cca0c5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 1363 images belonging to 10 classes.\n","Found 336 images belonging to 10 classes.\n","{'.ipynb_checkpoints': 0, '갈비구이': 1, '닭발구이': 2, '닭볶음탕': 3, '메밀소바': 4, '부대찌개': 5, '불고기': 6, '삼겹살구이': 7, '스테이크': 8, '토마토스파게티': 9}\n","Model: \"sequential_8\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," mobilenet_1.00_224 (Functio  (None, 7, 7, 1024)       3228864   \n"," nal)                                                            \n","                                                                 \n"," global_average_pooling2d_8   (None, 1024)             0         \n"," (GlobalAveragePooling2D)                                        \n","                                                                 \n"," dense_35 (Dense)            (None, 4096)              4198400   \n","                                                                 \n"," dropout_29 (Dropout)        (None, 4096)              0         \n","                                                                 \n"," dense_36 (Dense)            (None, 4096)              16781312  \n","                                                                 \n"," dropout_30 (Dropout)        (None, 4096)              0         \n","                                                                 \n"," dense_37 (Dense)            (None, 4096)              16781312  \n","                                                                 \n"," dropout_31 (Dropout)        (None, 4096)              0         \n","                                                                 \n"," dense_38 (Dense)            (None, 72)                294984    \n","                                                                 \n","=================================================================\n","Total params: 41,284,872\n","Trainable params: 41,262,984\n","Non-trainable params: 21,888\n","_________________________________________________________________\n","Epoch 1/30\n","43/43 [==============================] - 24s 186ms/step - loss: 3.2440 - acc: 0.1401 - val_loss: 2.3962 - val_acc: 0.2113\n","Epoch 2/30\n","43/43 [==============================] - 6s 141ms/step - loss: 2.3440 - acc: 0.2267 - val_loss: 1.9933 - val_acc: 0.4107\n","Epoch 3/30\n","43/43 [==============================] - 6s 147ms/step - loss: 2.0404 - acc: 0.3052 - val_loss: 1.7777 - val_acc: 0.4345\n","Epoch 4/30\n","43/43 [==============================] - 6s 145ms/step - loss: 1.8794 - acc: 0.3573 - val_loss: 1.5609 - val_acc: 0.5863\n","Epoch 5/30\n","43/43 [==============================] - 6s 146ms/step - loss: 1.7177 - acc: 0.4160 - val_loss: 1.4077 - val_acc: 0.5923\n","Epoch 6/30\n","43/43 [==============================] - 6s 147ms/step - loss: 1.5689 - acc: 0.4820 - val_loss: 1.2437 - val_acc: 0.6756\n","Epoch 7/30\n","43/43 [==============================] - 7s 153ms/step - loss: 1.4303 - acc: 0.5216 - val_loss: 1.1120 - val_acc: 0.7143\n","Epoch 8/30\n","43/43 [==============================] - 7s 154ms/step - loss: 1.2650 - acc: 0.5847 - val_loss: 0.9924 - val_acc: 0.7232\n","Epoch 9/30\n","43/43 [==============================] - 7s 152ms/step - loss: 1.1568 - acc: 0.6163 - val_loss: 0.9140 - val_acc: 0.7411\n","Epoch 10/30\n","43/43 [==============================] - 6s 148ms/step - loss: 1.0428 - acc: 0.6610 - val_loss: 0.8450 - val_acc: 0.7649\n","Epoch 11/30\n","43/43 [==============================] - 6s 146ms/step - loss: 0.9232 - acc: 0.6867 - val_loss: 0.7801 - val_acc: 0.7649\n","Epoch 12/30\n","43/43 [==============================] - 6s 144ms/step - loss: 0.8621 - acc: 0.7175 - val_loss: 0.7386 - val_acc: 0.7708\n","Epoch 13/30\n","43/43 [==============================] - 6s 145ms/step - loss: 0.7750 - acc: 0.7410 - val_loss: 0.7004 - val_acc: 0.7768\n","Epoch 14/30\n","43/43 [==============================] - 6s 143ms/step - loss: 0.7255 - acc: 0.7608 - val_loss: 0.6751 - val_acc: 0.7798\n","Epoch 15/30\n","43/43 [==============================] - 6s 147ms/step - loss: 0.6632 - acc: 0.7762 - val_loss: 0.6410 - val_acc: 0.8006\n","Epoch 16/30\n","43/43 [==============================] - 6s 146ms/step - loss: 0.6198 - acc: 0.7931 - val_loss: 0.6254 - val_acc: 0.7946\n","Epoch 17/30\n","43/43 [==============================] - 6s 145ms/step - loss: 0.5414 - acc: 0.8151 - val_loss: 0.6114 - val_acc: 0.8125\n","Epoch 18/30\n","43/43 [==============================] - 6s 144ms/step - loss: 0.5068 - acc: 0.8364 - val_loss: 0.6122 - val_acc: 0.8006\n","Epoch 19/30\n","43/43 [==============================] - 6s 146ms/step - loss: 0.4899 - acc: 0.8445 - val_loss: 0.5913 - val_acc: 0.8065\n","Epoch 20/30\n","43/43 [==============================] - 6s 145ms/step - loss: 0.3962 - acc: 0.8701 - val_loss: 0.5942 - val_acc: 0.8155\n","Epoch 21/30\n","43/43 [==============================] - 6s 146ms/step - loss: 0.3971 - acc: 0.8709 - val_loss: 0.5909 - val_acc: 0.8095\n","Epoch 22/30\n","43/43 [==============================] - 6s 144ms/step - loss: 0.3587 - acc: 0.8745 - val_loss: 0.5894 - val_acc: 0.8155\n","Epoch 23/30\n","43/43 [==============================] - 6s 146ms/step - loss: 0.3424 - acc: 0.8951 - val_loss: 0.5745 - val_acc: 0.8185\n","Epoch 24/30\n","43/43 [==============================] - 6s 144ms/step - loss: 0.3142 - acc: 0.8995 - val_loss: 0.5772 - val_acc: 0.8244\n","Epoch 25/30\n","43/43 [==============================] - 6s 145ms/step - loss: 0.2932 - acc: 0.8988 - val_loss: 0.5813 - val_acc: 0.8155\n","Epoch 26/30\n","43/43 [==============================] - 6s 143ms/step - loss: 0.2516 - acc: 0.9208 - val_loss: 0.5824 - val_acc: 0.8393\n","Epoch 27/30\n","43/43 [==============================] - 6s 146ms/step - loss: 0.2527 - acc: 0.9127 - val_loss: 0.5929 - val_acc: 0.8274\n","Epoch 28/30\n","43/43 [==============================] - 6s 143ms/step - loss: 0.2100 - acc: 0.9303 - val_loss: 0.5857 - val_acc: 0.8333\n","Epoch 29/30\n","43/43 [==============================] - 6s 145ms/step - loss: 0.1969 - acc: 0.9406 - val_loss: 0.6058 - val_acc: 0.8304\n","Epoch 30/30\n","43/43 [==============================] - 6s 145ms/step - loss: 0.1942 - acc: 0.9362 - val_loss: 0.5927 - val_acc: 0.8423\n","걸린시간:  0:03:32.561367\n","11/11 [==============================] - 1s 92ms/step - loss: 0.5927 - acc: 0.8423\n"]},{"output_type":"execute_result","data":{"text/plain":["[0.5927368998527527, 0.8422619104385376]"]},"metadata":{},"execution_count":28},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x400 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["### ImageDataGenerator 를 이용하여 데이터 불러오기\n","\n","train_data_gen= ImageDataGenerator(rescale= 1./255, validation_split=0.2)\n","# test_data_gen= ImageDataGenerator(rescale= 1./255)\n","\n","train_generator= train_data_gen.flow_from_directory(directory=TRAIN_DATA_ROOT_DIR,\n","                                                batch_size=32,\n","                                                color_mode='rgb',\n","                                                shuffle= True,\n","                                                target_size=(IMG_HEIGHT, IMG_WIDTH),\n","                                                class_mode='sparse',\n","                                                subset='training')\n","\n","val_generator= train_data_gen.flow_from_directory(directory=TRAIN_DATA_ROOT_DIR,\n","                                                batch_size=32,\n","                                                color_mode='rgb',\n","                                                shuffle= True,\n","                                                target_size=(IMG_HEIGHT, IMG_WIDTH),\n","                                                class_mode='sparse',\n","                                                subset='validation')\n","\n","# test_generator= test_data_gen.flow_from_directory(directory=TEST_DATA_ROOT_DIR,\n","#                                               batch_size=32,\n","#                                               color_mode='rgb',\n","#                                               shuffle= True,\n","#                                               target_size=(IMG_HEIGHT, IMG_WIDTH),\n","#                                               class_mode='sparse')\n","\n","print(train_generator.class_indices)\n","# print(test_generator.num_classes)\n","\n","\n","pre_trained_model= MobileNet(weights='imagenet', include_top=False,\n","                            input_shape= (IMG_WIDTH, IMG_HEIGHT, 3))\n","\n","\n","model= Sequential()\n","\n","model.add(pre_trained_model)\n","\n","model.add(GlobalAveragePooling2D())\n","\n","model.add(Dense(8192, activation='relu'))\n","model.add(Dropout(0.5))\n","model.add(Dense(8192, activation='relu'))\n","model.add(Dropout(0.5))\n","model.add(Dense(8192, activation='relu'))\n","model.add(Dropout(0.5))\n","\n","model.add(Dense(10, activation='softmax'))\n","\n","model.summary()\n","\n","model.compile(loss='sparse_categorical_crossentropy', optimizer=Adam(1e-5), metrics=['acc']) # colab: lr=2e-5\n","\n","start_time= datetime.now()\n","\n","result= model.fit(train_generator, epochs=30, validation_data=val_generator) # colab: epoch=30\n","end_time= datetime.now()\n","print('걸린시간: ', end_time - start_time)\n","\n","#### 그래프\n","plt.figure(figsize=(8,4))\n","plt.subplot(1,2,1)\n","\n","plt.title('LOSS')\n","plt.xlabel('epochs')\n","plt.ylabel('loss')\n","plt.grid()\n","\n","plt.plot(result.history['loss'], label='train_loss')\n","plt.plot(result.history['val_loss'], label= 'validation_loss')\n","plt.legend(loc='best')\n","\n","plt.subplot(1,2,2)\n","\n","plt.title('ACCURACY')\n","plt.xlabel('epochs')\n","plt.ylabel('acc')\n","plt.grid()\n","\n","plt.plot(result.history['acc'], label='train_accuracy')\n","plt.plot(result.history['val_acc'], label= 'validationi_accuracy')\n","plt.legend(loc='best')\n","\n","model.evaluate(val_generator)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"OtP9hK3in6ia","executionInfo":{"status":"ok","timestamp":1687769406455,"user_tz":-540,"elapsed":237920,"user":{"displayName":"ht k","userId":"13819470964221797465"}},"outputId":"d5e824cd-1600-41cd-a141-f464e02a3498"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 1363 images belonging to 10 classes.\n","Found 336 images belonging to 10 classes.\n","{'.ipynb_checkpoints': 0, '갈비구이': 1, '닭발구이': 2, '닭볶음탕': 3, '메밀소바': 4, '부대찌개': 5, '불고기': 6, '삼겹살구이': 7, '스테이크': 8, '토마토스파게티': 9}\n","Model: \"sequential_10\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," mobilenet_1.00_224 (Functio  (None, 7, 7, 1024)       3228864   \n"," nal)                                                            \n","                                                                 \n"," global_average_pooling2d_10  (None, 1024)             0         \n","  (GlobalAveragePooling2D)                                       \n","                                                                 \n"," dense_43 (Dense)            (None, 8192)              8396800   \n","                                                                 \n"," dropout_35 (Dropout)        (None, 8192)              0         \n","                                                                 \n"," dense_44 (Dense)            (None, 8192)              67117056  \n","                                                                 \n"," dropout_36 (Dropout)        (None, 8192)              0         \n","                                                                 \n"," dense_45 (Dense)            (None, 8192)              67117056  \n","                                                                 \n"," dropout_37 (Dropout)        (None, 8192)              0         \n","                                                                 \n"," dense_46 (Dense)            (None, 10)                81930     \n","                                                                 \n","=================================================================\n","Total params: 145,941,706\n","Trainable params: 145,919,818\n","Non-trainable params: 21,888\n","_________________________________________________________________\n","Epoch 1/30\n","43/43 [==============================] - 22s 176ms/step - loss: 2.1502 - acc: 0.2252 - val_loss: 1.8095 - val_acc: 0.4256\n","Epoch 2/30\n","43/43 [==============================] - 7s 163ms/step - loss: 1.8456 - acc: 0.3705 - val_loss: 1.5333 - val_acc: 0.4881\n","Epoch 3/30\n","43/43 [==============================] - 7s 166ms/step - loss: 1.5454 - acc: 0.4850 - val_loss: 1.2634 - val_acc: 0.6250\n","Epoch 4/30\n","43/43 [==============================] - 7s 165ms/step - loss: 1.3290 - acc: 0.5774 - val_loss: 1.0590 - val_acc: 0.6875\n","Epoch 5/30\n","43/43 [==============================] - 7s 169ms/step - loss: 1.1084 - acc: 0.6625 - val_loss: 0.9099 - val_acc: 0.7411\n","Epoch 6/30\n","43/43 [==============================] - 7s 166ms/step - loss: 0.9456 - acc: 0.6853 - val_loss: 0.8488 - val_acc: 0.7321\n","Epoch 7/30\n","43/43 [==============================] - 7s 166ms/step - loss: 0.8236 - acc: 0.7329 - val_loss: 0.7309 - val_acc: 0.7619\n","Epoch 8/30\n","43/43 [==============================] - 7s 165ms/step - loss: 0.7126 - acc: 0.7652 - val_loss: 0.6902 - val_acc: 0.7649\n","Epoch 9/30\n","43/43 [==============================] - 7s 163ms/step - loss: 0.6173 - acc: 0.7990 - val_loss: 0.6673 - val_acc: 0.7708\n","Epoch 10/30\n","43/43 [==============================] - 7s 166ms/step - loss: 0.5490 - acc: 0.8210 - val_loss: 0.6342 - val_acc: 0.7827\n","Epoch 11/30\n","43/43 [==============================] - 7s 165ms/step - loss: 0.4782 - acc: 0.8437 - val_loss: 0.6414 - val_acc: 0.7976\n","Epoch 12/30\n","43/43 [==============================] - 7s 165ms/step - loss: 0.4106 - acc: 0.8738 - val_loss: 0.6088 - val_acc: 0.8006\n","Epoch 13/30\n","43/43 [==============================] - 7s 165ms/step - loss: 0.3687 - acc: 0.8819 - val_loss: 0.6084 - val_acc: 0.8155\n","Epoch 14/30\n","43/43 [==============================] - 7s 165ms/step - loss: 0.3260 - acc: 0.8980 - val_loss: 0.6059 - val_acc: 0.8185\n","Epoch 15/30\n","43/43 [==============================] - 7s 166ms/step - loss: 0.2781 - acc: 0.9134 - val_loss: 0.6022 - val_acc: 0.8185\n","Epoch 16/30\n","43/43 [==============================] - 7s 165ms/step - loss: 0.2311 - acc: 0.9325 - val_loss: 0.6105 - val_acc: 0.8095\n","Epoch 17/30\n","43/43 [==============================] - 7s 168ms/step - loss: 0.2110 - acc: 0.9420 - val_loss: 0.6235 - val_acc: 0.8304\n","Epoch 18/30\n","43/43 [==============================] - 7s 164ms/step - loss: 0.1654 - acc: 0.9530 - val_loss: 0.6118 - val_acc: 0.8244\n","Epoch 19/30\n","43/43 [==============================] - 7s 166ms/step - loss: 0.1444 - acc: 0.9596 - val_loss: 0.6500 - val_acc: 0.8274\n","Epoch 20/30\n","43/43 [==============================] - 7s 166ms/step - loss: 0.1337 - acc: 0.9633 - val_loss: 0.6594 - val_acc: 0.8214\n","Epoch 21/30\n","43/43 [==============================] - 7s 166ms/step - loss: 0.1145 - acc: 0.9773 - val_loss: 0.6471 - val_acc: 0.8423\n","Epoch 22/30\n","43/43 [==============================] - 7s 165ms/step - loss: 0.1225 - acc: 0.9640 - val_loss: 0.7329 - val_acc: 0.8244\n","Epoch 23/30\n","43/43 [==============================] - 7s 166ms/step - loss: 0.0919 - acc: 0.9743 - val_loss: 0.7051 - val_acc: 0.8244\n","Epoch 24/30\n","43/43 [==============================] - 7s 166ms/step - loss: 0.0861 - acc: 0.9765 - val_loss: 0.6776 - val_acc: 0.8452\n","Epoch 25/30\n","43/43 [==============================] - 7s 164ms/step - loss: 0.0812 - acc: 0.9758 - val_loss: 0.7214 - val_acc: 0.8333\n","Epoch 26/30\n","43/43 [==============================] - 7s 166ms/step - loss: 0.0693 - acc: 0.9861 - val_loss: 0.7233 - val_acc: 0.8304\n","Epoch 27/30\n","43/43 [==============================] - 7s 167ms/step - loss: 0.0500 - acc: 0.9883 - val_loss: 0.7264 - val_acc: 0.8601\n","Epoch 28/30\n","43/43 [==============================] - 7s 165ms/step - loss: 0.0423 - acc: 0.9934 - val_loss: 0.7561 - val_acc: 0.8333\n","Epoch 29/30\n","43/43 [==============================] - 7s 166ms/step - loss: 0.0331 - acc: 0.9919 - val_loss: 0.7771 - val_acc: 0.8333\n","Epoch 30/30\n","43/43 [==============================] - 7s 164ms/step - loss: 0.0448 - acc: 0.9883 - val_loss: 0.7895 - val_acc: 0.8333\n","걸린시간:  0:03:54.474192\n","11/11 [==============================] - 1s 89ms/step - loss: 0.7895 - acc: 0.8333\n"]},{"output_type":"execute_result","data":{"text/plain":["[0.7894965410232544, 0.8333333134651184]"]},"metadata":{},"execution_count":30},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x400 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CpT_R9nnF_f7"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wOsPJ0BiKlcS","executionInfo":{"status":"ok","timestamp":1687425997947,"user_tz":-540,"elapsed":2,"user":{"displayName":"smith John","userId":"10695461720121247999"}},"outputId":"50bd1ea3-c15c-474a-cba1-a6dad046211d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f733c30e080>"]},"metadata":{},"execution_count":33}],"source":[]},{"cell_type":"code","source":[],"metadata":{"id":"ASZEPiQfbNqs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"zfcbnYYNdVWs"},"execution_count":null,"outputs":[]}],"metadata":{"accelerator":"GPU","colab":{"gpuType":"T4","provenance":[{"file_id":"11fdiptGZ3ejZdNTMrR3T0pz-c1rKjbsp","timestamp":1687757746740}],"machine_shape":"hm"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.13"}},"nbformat":4,"nbformat_minor":0}